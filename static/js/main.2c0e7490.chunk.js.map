{"version":3,"sources":["components/ContactList/ContactListItem/ContactListItem.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/Section/Section.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","redux/contacts/contacts-operations.js","components/ContactList/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-selector.js","components/Filter/Filter.js","components/Section/Section.js","App.js","redux/contacts/contacts-reducer.js","redux/store/store.js","index.js"],"names":["module","exports","ContactForm","onSubmit","useState","name","setName","number","setNumber","nameInputId","shortid","generate","telInputId","handleChange","e","currentTarget","value","reset","className","s","form","preventDefault","block","label","htmlFor","type","onChange","id","input","placeholder","btnBlock","btn","axios","defaults","baseURL","fetchContacts","createAsyncThunk","_","a","rejectWithValue","get","data","contacts","message","addContact","contact","post","result","deleteContact","contactId","delete","ContactListItem","dispatch","useDispatch","listItem","itemDesc","onClick","ContactList","list","map","changeFilter","createAction","getContacts","state","getFilter","filter","Filter","useSelector","target","Section","children","container","App","useEffect","findForbiddenName","forbiddenName","i","length","toLowerCase","findContact","normalizedFilter","includes","getFindContact","alert","createReducer","fulfilled","action","payload","combineReducers","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2c0e7490.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactListItem_listItem__1xvce\",\"itemDesc\":\"ContactListItem_itemDesc__3oOsM\",\"btn\":\"ContactListItem_btn__3Vckz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__jd9DN\",\"label\":\"Filter_label__6H5TI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1n7jy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__YBuJV\",\"title\":\"Section_title__2fhf4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3EdsJ\",\"block\":\"ContactForm_block__1N1l_\",\"input\":\"ContactForm_input__27Bh8\",\"btnBlock\":\"ContactForm_btnBlock__1-oyO\",\"btn\":\"ContactForm_btn__1FotD\",\"label\":\"ContactForm_label__2ckgm\"};","import { useState } from 'react';\nimport s from './ContactForm.module.css';\nimport shortid from 'shortid';\n\nexport default function ContactForm({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const nameInputId = shortid.generate();\n  const telInputId = shortid.generate();\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    onSubmit({ name, number });\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <div className={s.block}>\n        <div className={s.label}>\n          <label htmlFor={nameInputId}>Name</label>\n        </div>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          id={nameInputId}\n          className={s.input}\n        />\n      </div>\n      <div className={s.block}>\n        <div className={s.label}>\n          <label htmlFor={telInputId}>Number</label>\n        </div>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          placeholder=\"+380 (00) 000-00-00\"\n          id={nameInputId}\n          className={s.input}\n        />\n      </div>\n      <div className={s.btnBlock}>\n        <div>\n          <button className={s.btn} type=\"submit\">\n            Add contact\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n}\n","import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\naxios.defaults.baseURL = 'https://61c0c09333f24c00178235df.mockapi.io';\n\nexport const fetchContacts = createAsyncThunk(\n  'contacts/fetchContacts',\n  async (_, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.get(`/contacts`);\n      const contacts = data;\n      return contacts;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  },\n);\n\nexport const addContact = createAsyncThunk(\n  'contacts/addContact',\n  async (contact, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.post('/contacts', contact);\n      const result = data;\n      return result;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  },\n);\n\nexport const deleteContact = createAsyncThunk(\n  'contacts/deleteContact',\n  async (contactId, { rejectWithValue }) => {\n    try {\n      await axios.delete(`/contacts/${contactId}`);\n      return contactId;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  },\n);\n","import PropTypes from 'prop-types';\nimport { deleteContact } from '../../../redux/contacts/contacts-operations';\nimport { useDispatch } from 'react-redux';\nimport s from './ContactListItem.module.css';\n\nconst ContactListItem = ({ name, number, id }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <li className={s.listItem}>\n      <p className={s.itemDesc}>{name}:</p>\n      <p className={s.itemDesc}>{number}</p>\n      <button\n        className={s.btn}\n        type=\"button\"\n        onClick={() => dispatch(deleteContact(id))}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactListItem.propTypes = {\n  number: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n};\n\nexport default ContactListItem;\n","import PropTypes from 'prop-types';\nimport ContactListItem from './ContactListItem';\nimport s from './ContactList.module.css';\n\nconst ContactList = ({ contacts }) => {\n  return (\n    <ul className={s.list}>\n      {contacts.map(contact => (\n        <ContactListItem\n          key={contact.id}\n          id={contact.id}\n          name={contact.name}\n          number={contact.number}\n        />\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = { contacts: PropTypes.array };\n\nexport default ContactList;\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const changeFilter = createAction('filter/change');\n","export const getContacts = state => state.contacts.contacts;\nexport const getFilter = state => state.contacts.filter;\n","import s from './Filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter } from '../../redux/contacts/contacts-actions';\nimport { getFilter } from '../../redux/contacts/contacts-selector';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  const onChange = e => {\n    const { value } = e.target;\n    dispatch(changeFilter(value));\n  };\n  return (\n    <>\n      <div>\n        <label className={s.label} htmlFor=\"filter\">\n          Find contacts by name\n        </label>\n      </div>\n      <input\n        type=\"text\"\n        id=\"filter\"\n        name=\"filter\"\n        value={filter}\n        onChange={onChange}\n        className={s.input}\n      />\n    </>\n  );\n}\n","import s from './Section.module.css';\n\nconst Section = ({ children }) => (\n  <section className={s.container}>{children}</section>\n);\n\nexport default Section;\n","import ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\nimport Section from './components/Section';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContacts, getFilter } from './redux/contacts/contacts-selector';\nimport {\n  addContact,\n  fetchContacts,\n} from './redux/contacts/contacts-operations';\n\nexport default function App() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const filter = useSelector(getFilter);\n  useEffect(() => dispatch(fetchContacts()), [dispatch]);\n\n  const addContacts = ({ name, number }) => {\n    const identicalName = findForbiddenName(name);\n    const newContact = {\n      name,\n      number,\n    };\n    if (identicalName === false) {\n      dispatch(addContact(newContact));\n    } else {\n      alert(name + ' ' + 'is already in contacts');\n    }\n  };\n\n  const findForbiddenName = name => {\n    let forbiddenName = false;\n    for (let i = 0; i < contacts.length; i += 1) {\n      const normalizeContactsName = contacts[i].name.toLowerCase();\n      const normalizeName = name.toLowerCase();\n      if (normalizeContactsName === normalizeName) {\n        return (forbiddenName = true);\n      } else {\n        forbiddenName = false;\n      }\n    }\n    return forbiddenName;\n  };\n\n  const getFindContact = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  const findContact = getFindContact();\n\n  return (\n    <Section>\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={addContacts} />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList contacts={findContact} />\n    </Section>\n  );\n}\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { changeFilter } from './contacts-actions';\nimport {\n  addContact,\n  deleteContact,\n  fetchContacts,\n} from './contacts-operations';\n\nconst contacts = createReducer([], {\n  [fetchContacts.fulfilled]: (_, action) => action.payload,\n  [addContact.fulfilled]: (state, { payload }) => [payload, ...state],\n  [deleteContact.fulfilled]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({ contacts, filter });\n","import { configureStore } from '@reduxjs/toolkit';\nimport contacts from '../contacts/contacts-reducer';\n\nexport const store = configureStore({\n  reducer: {\n    contacts,\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store/store';\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}